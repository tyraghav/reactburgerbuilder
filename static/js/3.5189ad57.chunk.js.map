{"version":3,"sources":["Component/UI/Input/Input.module.css","Component/Order/CheckOutSummary/CheckOutSummary.module.css","Container/CheckOut/ContactData/ContactData.module.css","Component/Order/CheckOutSummary/CheckOutSummary.js","Container/CheckOut/ContactData/ContactData.js","Container/CheckOut/CheckOut.js","Component/UI/Input/Input.js"],"names":["module","exports","CheckOutSummary","props","className","classes","style","width","margin","Burger","ingredients","Button","btnType","clicked","confirm","cancel","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","validation","required","valid","touched","value","street","email","country","zip","deliveryMethod","options","displayValue","formIsValid","inputOnChangeHandler","event","inputId","myFormIsValid","myForm","inputEl","target","isValidChecker","setState","placeOrderHandler","preventDefault","myOrderData","formIdele","myOrder","ings","price","contact","orderData","userId","console","log","onOrderBurger","token","formElementsArray","key","this","push","id","config","form","onSubmit","map","el","Input","invalid","change","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","order","auth","idToken","dispatch","actions","WithErrorHandler","AxiosInstance","CheckOut","checkOutConfirmHandler","history","checkOutCancelHandler","goBack","summary","to","purchasedRedirect","purchased","path","component","inputElement","inputElementClass","InputElement","Invalid","onChange","optEl","Label","label"],"mappings":"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","file":"static/js/3.5189ad57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2JZFx\",\"Label\":\"Input_Label__3YW2y\",\"InputElement\":\"Input_InputElement__1GBWx\",\"Invalid\":\"Input_Invalid__32mjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"CheckOutSummary_CheckOutSummary__17mjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1Vwm1\",\"Input\":\"ContactData_Input__1W4Iz\"};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport classes from './CheckOutSummary.module.css';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CheckOutSummary = props => {\r\n\r\n    return (\r\n        <div className={classes.CheckOutSummary}>\r\n            <div style={{width:'100%', margin: 'auto'}} >\r\n            <p><strong>HAPPY BURGERRING</strong></p>\r\n            <Burger ingredients={props.ingredients}/>\r\n            <Button btnType='Success' clicked={props.confirm}>CONFIRM</Button>\r\n            <Button btnType='Danger' clicked={props.cancel}>CANCEL</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckOutSummary;","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './ContactData.module.css';\r\nimport Button from '../../../Component/UI/Button/Button';\r\nimport Spinner from '../../../Component/UI/Spinner/Spinner';\r\nimport AxiosInstance from '../../../AxiosInstance';\r\nimport Input from '../../../Component/UI/Input/Input';\r\nimport * as actions from '../../../store/actions/index';\r\nimport WithErrorHandler from '../../../HOC/WithErrorHandler/WithErrorHandler';\r\nimport { isValidChecker } from '../../../store/utility';\r\n\r\nclass ContactData extends Component {\r\n    /*state = {\r\n        contact: {\r\n            name: '',\r\n            email: '',\r\n            address: {\r\n                street: '',\r\n                zip: ''\r\n            }\r\n        },\r\n        loading: false\r\n    }*/\r\n    state = {\r\n        orderForm : {\r\n            name : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Your Name'\r\n                },\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false,\r\n                value : ''\r\n            },\r\n            street : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Your Street'\r\n                },\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false,\r\n                value : ''\r\n            },\r\n            email : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'email',\r\n                    placeholder : 'Your Email'\r\n                },\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false,\r\n                value : ''\r\n            },\r\n            country : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Your Country'\r\n                },\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false,\r\n                value : ''\r\n            },\r\n            zip : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Pin Code'\r\n                },\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false,\r\n                value : ''\r\n            },\r\n            deliveryMethod : {\r\n                elementType : 'select',\r\n                elementConfig : {\r\n                    options : [\r\n                        { value: 'fastest', displayValue: 'fastest'},\r\n                        { value: 'cheapest', displayValue: 'cheapest'}\r\n                    ]\r\n                },\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : true,\r\n                touched : true,\r\n                value : 'fastest'\r\n            }\r\n        },\r\n        formIsValid : false\r\n    }\r\n\r\n\r\n    inputOnChangeHandler = (event,inputId) => {\r\n        let myFormIsValid = true;\r\n        const myForm = {...this.state.orderForm};\r\n        const inputEl = {...myForm[inputId]};\r\n        inputEl.value = event.target.value;\r\n        inputEl.touched = true;\r\n        inputEl.valid = isValidChecker(inputEl.value,inputEl.validation);\r\n        myForm[inputId] = inputEl;\r\n        for(let inputId in myForm){\r\n            myFormIsValid = myForm[inputId].valid && myFormIsValid;\r\n        }\r\n        this.setState({orderForm : myForm , formIsValid: myFormIsValid});\r\n    }\r\n\r\n    placeOrderHandler = (event) => {\r\n        event.preventDefault();\r\n        const myOrderData = {}\r\n        for (let formIdele in this.state.orderForm){\r\n            myOrderData[formIdele] = this.state.orderForm[formIdele].value;\r\n        }\r\n        const myOrder = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            contact: this.state.contact,\r\n            orderData: myOrderData,\r\n            userId: this.props.userId\r\n        };\r\n        console.log(myOrder);\r\n        this.props.onOrderBurger(myOrder,this.props.token);\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (<form onSubmit={this.placeOrderHandler}>\r\n                        <h2>Enter your details below</h2>\r\n                        {formElementsArray.map(el => (\r\n                            <Input elementType={el.config.elementType} key={el.id} elementConfig={el.config.elementConfig} value={el.config.value} invalid={!el.config.valid} touched={el.config.touched} change={(event) => this.inputOnChangeHandler(event,el.id)}/>\r\n                        ))}\r\n                        <Button btnType='Success' disabled={!this.state.formIsValid}>PLACE ORDER</Button>\r\n                    </form>);\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        return (<div className={classes.ContactData}>\r\n                    {form}\r\n                </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        loading : state.order.loading,\r\n        token: state.auth.idToken,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger : (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WithErrorHandler(ContactData,AxiosInstance));","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './CheckOut.module.css';\r\nimport CheckOutSummary from '../../Component/Order/CheckOutSummary/CheckOutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nclass CheckOut extends Component {\r\n\r\n    componentDidMount(){\r\n        /*const ingredients = {};\r\n        let price = null;\r\n        for(let i of this.props.location.search.slice(1).split('&')){\r\n            let p = i.split('=');\r\n            if(p[0]!=='price'){\r\n                ingredients[p[0]]= +p[1];\r\n            } else {\r\n                price = +p[1];\r\n            }\r\n        }\r\n        this.setState({ingredients: ingredients, price: price});*/\r\n    }\r\n\r\n    checkOutConfirmHandler = () => {\r\n        this.props.history.push('/checkout/contact');\r\n    }\r\n\r\n    checkOutCancelHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    \r\n    render() {\r\n        let summary = <Redirect to='/'/>\r\n        if(this.props.ings){\r\n            let purchasedRedirect = this.props.purchased?<Redirect to='/'/>:null;\r\n            summary = <div className={classes.CheckOut}>\r\n                {purchasedRedirect}\r\n                <CheckOutSummary ingredients={this.props.ings}\r\n                cancel={this.checkOutCancelHandler} confirm={this.checkOutConfirmHandler}/>\r\n                <Route path='/checkout/contact' component={ContactData}/>\r\n            </div>\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CheckOut);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = props => { \r\nlet inputElement = null;\r\nlet inputElementClass = classes.InputElement;\r\nif(props.invalid && props.touched){\r\n    inputElementClass = inputElementClass + ' ' + classes.Invalid;\r\n}\r\n\r\nswitch(props.elementType){\r\n    case('input'):\r\n        inputElement=<input className={inputElementClass} {...props.elementConfig} onChange={props.change}/>\r\n        break;\r\n    case('textarea'):\r\n        inputElement=<textarea className={inputElementClass} {...props.elementConfig} onChange={props.change}/>\r\n        break;\r\n    case('select'):\r\n        inputElement=<select className={inputElementClass} {...props.elementConfig} onChange={props.change}>\r\n            {props.elementConfig.options.map(optEl => <option value={optEl.value} key={optEl.value}>{optEl.displayValue}</option>)}\r\n        </select>\r\n        break;\r\n    default:\r\n        inputElement=<input className={inputElementClass} {...props.elementConfig} onChange={props.change}/>\r\n        break;\r\n}\r\n\r\nreturn (\r\n<div className={classes.Input}>\r\n    <label className={classes.Label}>{props.label}</label>\r\n    {inputElement}\r\n</div>);\r\n}\r\n\r\nexport default Input;"],"sourceRoot":""}