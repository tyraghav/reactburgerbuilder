{"version":3,"sources":["store/actions/actionTypes.js","HOC/Auxillary/Auxillary.js","AxiosInstance.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","Component/Burger/BurgerIngredient/BurgerIngredient.module.css","store/utility.js","Component/Navigation/SideDrawer/SideDrawer.module.css","Component/Burger/BuildControls/BuildControl/BuildControl.module.css","Component/UI/Backdrop/Backdrop.js","Component/UI/Modal/Modal.js","Component/Navigation/Toolbar/Toolbar.module.css","Component/UI/Button/Button.js","Component/UI/Spinner/Spinner.js","Component/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Component/Burger/BuildControls/BuildControls.module.css","Component/UI/Button/Button.module.css","HOC/WithErrorHandler/WithErrorHandler.js","Component/Burger/BurgerIngredient/BurgerIngredient.js","Component/Burger/Burger.js","Component/Layout/Layout.module.css","Component/Logo/Logo.module.css","Asset/Images/burger-logo.png","Component/Navigation/NavigationItems/NavigationItems.module.css","Component/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","Component/UI/Backdrop/Backdrop.module.css","Component/UI/Modal/Modal.module.css","Component/Burger/Burger.module.css","Component/UI/Spinner/Spinner.module.css","Component/Logo/Logo.js","Component/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Component/Navigation/NavigationItems/NavigationItems.js","Component/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Component/Navigation/Toolbar/Toolbar.js","Component/Navigation/SideDrawer/SideDrawer.js","Component/Layout/Layout.js","Component/Burger/BuildControls/BuildControl/BuildControl.js","Component/Burger/BuildControls/BuildControls.js","Component/Burger/OrderSummary/OrderSummary.js","Container/BurgerBuilder/BurgerBuilder.js","Container/Auth/LogOut/LogOut.js","HOC/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILURE","PURCHASE_BURGER_START","PURCHASE_BURGER_INIT","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILURE","FETCH_ORDERS_START","AUTH_LOGOUT","AUTH_SUCCESS","AUTH_FAILURE","AUTH_START","SET_AUTH_REDIRECT_PATH","Auxillary","props","children","AxiosInstance","axios","create","baseURL","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","get","then","response","ingredients","data","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFailure","purchaseBurgerInit","fetchOrders","userId","queryParams","Response","orders","fetchedOrders","ord","push","Error","signupAuthSuccess","idToken","authLogOut","localStorage","removeItem","authTimeOut","expireTimeOut","setTimeout","signupAuth","email","password","isSignup","req","returnSecureToken","url","console","log","expirationDate","Date","getTime","expiresIn","setItem","localId","err","authCheckState","getItem","setAuthRedirectPath","path","module","exports","isValidChecker","myValue","rules","isValid","required","trim","minLength","length","maxLength","UpdateObject","OldObject","UpdatedProperties","Backdrop","show","className","classes","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","Button","btnType","join","disabled","Spinner","Loader","WithErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","resInterceptor","res","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","displayIngredients","Object","keys","map","idKey","Array","_","num","key","reduce","arr","currEl","concat","Logo","src","imagesrc","alt","NavigationItem","to","linkUrl","activeClassName","active","exact","NavigationItems","isAuthenticated","DrawerToggle","Toolbar","sideDrawerToggleClicked","desktopOnly","SideDrawer","sideDrawerClass","open","Open","Close","clickedBackdrop","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","auth","BuildControl","Label","label","More","adder","Less","remover","disabledInfo","BuildControls","price","toFixed","it","OrderButton","ordered","orderEnabled","OrderSummary","ingredientsSummary","textTransform","confirmClicked","cancelClicked","BurgerBuilder","purchasable","purchasing","loading","updatePurchaseState","iKey","sum","currValue","addIngredientHandler","myState","ings","removeIngredientHandler","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseConfirmHandler","onInitPurchase","onInitIngredients","burger","onIngredientAdded","onIngredientRemoved","orderSummary","burgerBuilder","totalPrice","ingName","actions","LogOut","doLogOut","asyncComponent","importComponent","component","cmp","C","asyncCheckout","asyncAuth","asyncOrders","App","onTryAutoSignUp","routes","withRouter","Boolean","window","location","hostname","match","INGREDIENT_PRICE","cheese","salad","bacon","meat","initialState","building","reducer","action","updatedIngredients","updateObject","updatedState","updIngredients","updState","purchased","newOrder","authRedirectPath","authReducer","rootReducer","combineReducers","BurgerBuilderReducer","order","OrderReducer","AuthReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0a46272.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAILURE = 'PURCHASE_BURGER_FAILURE';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_INIT = 'PURCHASE_BURGER_INIT';\r\n\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAILURE = 'FETCH_ORDERS_FAILURE';\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\n\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH = 'AUTH';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","const Auxillary = props => props.children;\r\n\r\nexport default Auxillary;","import axios from 'axios';\r\n\r\nconst AxiosInstance = axios.create({\r\n    baseURL: 'https://myfirebaseproject-4be32.firebaseio.com/'\r\n});\r\n\r\nexport default AxiosInstance;","import * as actionTypes from './actionTypes';\r\nimport AxiosInstance from '../../AxiosInstance';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type : actionTypes.ADD_INGREDIENT,\r\n        ingredientName : name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type : actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName : name\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type : actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type : actionTypes.SET_INGREDIENTS,\r\n        ingredients : ingredients\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => AxiosInstance.get('/Ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            }).catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n}","import * as actionTypes from './actionTypes';\r\nimport AxiosInstance from '../../AxiosInstance';\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFailure = (error) => { \r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAILURE,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        AxiosInstance.post('/Orders.json?auth='+token,orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            }).catch(error => {\r\n                dispatch(purchaseBurgerFailure(error));\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFailure = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAILURE,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n         type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n    dispatch(fetchOrderStart());\r\n    const queryParams = '?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"';\r\n    AxiosInstance.get('/Orders.json'+queryParams)\r\n        .then(Response => {\r\n            const fetchedOrders = [];\r\n            for(let ord in Response.data){\r\n                fetchedOrders.push({...Response.data[ord],id:ord});\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n    }).catch(Error => {\r\n        dispatch(fetchOrdersFailure(Error));\r\n    });\r\n}}\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const signupAuthSuccess = (idToken,userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: idToken,\r\n        userId: userId\r\n    }\r\n}\r\n\r\n\r\nexport const signupAuthFailure = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAILURE,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const signupAuthStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authLogOut = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const authTimeOut = (expireTimeOut) => {\r\n    return dispatch => setTimeout(() => {\r\n        dispatch(authLogOut());\r\n    },expireTimeOut*1000);\r\n}\r\n\r\nexport const signupAuth = (email,password,isSignup) => {\r\n    return dispatch => {\r\n        dispatch(signupAuthStart());\r\n        const req = { email:email, password:password, returnSecureToken:true};\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBnTQCb34k3AlCXuxHM-dAlmR-LUw7qkH4';\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBnTQCb34k3AlCXuxHM-dAlmR-LUw7qkH4';\r\n        }\r\n        axios.post(url,req).then(\r\n            response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime()+response.data.expiresIn*1000);\r\n                localStorage.setItem('token',response.data.idToken);\r\n                localStorage.setItem('userId',response.data.localId);\r\n                localStorage.setItem('expirationDate',expirationDate);\r\n                dispatch(signupAuthSuccess(response.data.idToken,response.data.localId));\r\n                dispatch(authTimeOut(response.data.expiresIn));\r\n            }\r\n        ).catch(\r\n            err => {\r\n                dispatch(signupAuthFailure(err.response.data.error));\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(authLogOut);\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate < new Date()){\r\n                dispatch(authLogOut);\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(signupAuthSuccess(token,userId));\r\n                dispatch(authTimeOut((expirationDate.getTime()-new Date().getTime())/1000));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}","export { addIngredient , removeIngredient , initIngredients } from './burgerBuilder';\r\nexport { purchaseBurger, purchaseBurgerInit, fetchOrders } from './order';\r\nexport { signupAuth, authLogOut, setAuthRedirectPath, authCheckState } from './auth';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3EkiA\",\"BreadTop\":\"BurgerIngredient_BreadTop__2H3EF\",\"Seeds1\":\"BurgerIngredient_Seeds1__2eJc6\",\"Seeds2\":\"BurgerIngredient_Seeds2__26ppe\",\"Meat\":\"BurgerIngredient_Meat__1fDSu\",\"Cheese\":\"BurgerIngredient_Cheese__22kjh\",\"Salad\":\"BurgerIngredient_Salad__U9HnB\",\"Bacon\":\"BurgerIngredient_Bacon__3SINj\"};","const UpdateObject = (OldObject,UpdatedProperties) => {\r\n    return{\r\n        ...OldObject,\r\n        ...UpdatedProperties\r\n    }\r\n}\r\n\r\nexport const isValidChecker = (myValue,rules) => {\r\n    let isValid = true;\r\n    if(rules.required){\r\n        isValid = myValue.trim()!=='' && isValid;\r\n    }\r\n    if(rules.minLength){\r\n        isValid = myValue.length >= rules.minLength && isValid;\r\n    }\r\n    if(rules.maxLength){\r\n        isValid = myValue.length <= rules.maxLength && isValid;\r\n    }\r\n    return isValid;\r\n}\r\n\r\nexport default UpdateObject;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__Up-pD\",\"Open\":\"SideDrawer_Open__3p78w\",\"Close\":\"SideDrawer_Close__-0Pz3\",\"Logo\":\"SideDrawer_Logo__3BSWF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1cAZg\",\"Label\":\"BuildControl_Label__3WbDw\",\"Less\":\"BuildControl_Less__3zvOH\",\"More\":\"BuildControl_More__2QEeB\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = (props) => {\r\n    return (props.show ? <div className={classes.Backdrop} onClick={props.clicked} /> : null);\r\n}\r\n\r\nexport default Backdrop;","import React , { Component } from 'react';\r\nimport classes from './Modal.module.css'\r\nimport Auxillary from '../../../HOC/Auxillary/Auxillary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n    \r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return this.props.show!==nextProps.show || this.props.children!==nextProps.children;\r\n    } \r\n\r\n    render(){\r\n        return (  \r\n            <Auxillary>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} /> \r\n                <div className={classes.Modal}\r\n                    style={{transform : this.props.show?'translateY(0)':'translateY(-100vh)',\r\n                            opacity : this.props.show?'1':'0'}}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Auxillary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3cIP8\",\"Logo\":\"Toolbar_Logo__3i5lf\",\"desktopOnly\":\"Toolbar_desktopOnly__1nX4z\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (<button className={[classes.Button,classes[props.btnType]].join(' ')}\r\n                disabled={props.disabled} onClick={props.clicked}>{props.children}</button>)\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div className={classes.Loader}>..Loading</div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3ynsj\",\"active\":\"NavigationItem_active__15N-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__34FeU\",\"OrderButton\":\"BuildControls_OrderButton__7MEPd\",\"enable\":\"BuildControls_enable__3sYSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3DKzf\",\"Success\":\"Button_Success__3WRlt\",\"Danger\":\"Button_Danger__3Daa1\"};","import React, { Component } from 'react';\r\nimport Auxillary from '../Auxillary/Auxillary';\r\nimport Modal from '../../Component/UI/Modal/Modal';\r\nimport AxiosInstance from '../../AxiosInstance';\r\n\r\nconst WithErrorHandler = (WrappedComponent,axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount(){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res,err =>{\r\n                this.setState({error:err});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            AxiosInstance.interceptors.request.eject(this.reqInterceptor);\r\n            AxiosInstance.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render(){\r\n            return <Auxillary>\r\n                <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>{this.state.error?this.state.error.message:null}</Modal>\r\n                <WrappedComponent {...this.props}/>\r\n            </Auxillary>\r\n        }\r\n    }\r\n}\r\n\r\nexport default WithErrorHandler;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className = {classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = <div className = {classes.BreadTop}>\r\n                    <div className = {classes.Seeds1}> </div>\r\n                    <div className = {classes.Seeds2}> </div>\r\n                </div>;\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className = {classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className = {classes.Cheese}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className = {classes.Salad}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className = {classes.Bacon}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst Burger = (props) => {\r\n    let displayIngredients = Object.keys(props.ingredients).map(\r\n        idKey => [...Array(props.ingredients[idKey])].map(\r\n        (_,num) => <BurgerIngredient key={idKey+num} type={idKey} /> \r\n        )).reduce((arr,currEl) => arr.concat (currEl),[]);\r\n    if(displayIngredients.length === 0){\r\n        displayIngredients = <p>Please add a Ingredient</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top' />\r\n            {displayIngredients}\r\n            <BurgerIngredient type='bread-bottom' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Burger;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__Mh2Q4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2p0g9\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1XaaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1HFy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2UGpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__S9zKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1rDjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2Fs6r\",\"load3\":\"Spinner_load3__cnV18\"};","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport imagesrc from '../../Asset/Images/burger-logo.png';\r\n\r\nconst Logo = props => (\r\n    <div className={classes.Logo}>\r\n        <img src={imagesrc} alt='Burger Logo'/>\r\n    </div>\r\n)\r\nexport default Logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavigationItem = props => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink to={props.linkUrl} activeClassName={classes.active} exact={props.exact}>{props.children}</NavLink>\r\n    </li>\r\n)\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = props => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem linkUrl='/' exact>BURGER BUILDER</NavigationItem>\r\n        {props.isAuthenticated?<NavigationItem linkUrl='/orders'>ORDERS</NavigationItem>:null}\r\n        {props.isAuthenticated?<NavigationItem linkUrl='/logout'>LOGOUT</NavigationItem>:<NavigationItem linkUrl='/auth'>AUTHENTICATE</NavigationItem>}\r\n    </ul>\r\n)\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst DrawerToggle = props => {\r\n    return (\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.sideDrawerToggleClicked}/>\r\n            <div className={classes.Logo}>\r\n                <Logo/>\r\n            </div>\r\n            <nav className={classes.desktopOnly}>\r\n                <NavigationItems isAuthenticated={props.isAuthenticated} />\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport Auxillary from '../../../HOC/Auxillary/Auxillary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst SideDrawer = props => {\r\n    let sideDrawerClass = classes.SideDrawer;\r\n    if(props.open === true){\r\n        sideDrawerClass = sideDrawerClass+' '+classes.Open;\r\n    } else {\r\n        sideDrawerClass = sideDrawerClass+' '+classes.Close;\r\n    }\r\n    return (\r\n    <Auxillary>\r\n        <Backdrop show={props.open} clicked={props.clickedBackdrop}/>\r\n        <div className={sideDrawerClass} onClick={props.clickedBackdrop}>\r\n            <div className={classes.Logo}>\r\n                <Logo/>\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuthenticated}/>\r\n            </nav>\r\n        </div>\r\n    </Auxillary>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React , { Component } from 'react';\r\nimport Auxillary from '../../HOC/Auxillary/Auxillary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxillary>\r\n                <Toolbar isAuthenticated={this.props.isAuthenticated} sideDrawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer isAuthenticated={this.props.isAuthenticated} open={this.state.showSideDrawer} clickedBackdrop={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxillary>\r\n    );\r\n}\r\n} ;\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.idToken!==null\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst BuildControl = (props) => {\r\n    return <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.More} onClick={props.adder}>More</button>\r\n        <button className={classes.Less} onClick={props.remover} disabled={props.disabledInfo}>Less</button>\r\n    </div>;\r\n}\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst BuildControls = (props) => {\r\n    const controls = [\r\n        { label: 'SALAD', type: 'salad'},\r\n        { label: 'MEAT', type: 'meat'},\r\n        { label: 'BACON', type: 'bacon'},\r\n        { label: 'CHEESE', type: 'cheese'}\r\n    ]\r\n    return (<div className={classes.BuildControls}>\r\n        <p>Total Price : <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(it => <BuildControl\r\n                                key={it.type} label={it.label} \r\n                                adder={() => props.addIngredient(it.type)}\r\n                                remover={() => props.removeIngredient(it.type)}\r\n                                disabledInfo={props.disabledInfo[it.type]}\r\n                            />\r\n                        )}\r\n        <button className={classes.OrderButton} onClick={props.ordered} disabled={!props.orderEnabled}>{props.isAuthenticated?'ORDER NOW':'SIGN UP TO ORDER'}</button>\r\n    </div>);\r\n}\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport Auxillary from '../../../HOC/Auxillary/Auxillary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst OrderSummary = (props) => {\r\n    const ingredientsSummary = Object.keys(props.ingredients).map(\r\n        idKey => { return (<li key={idKey}><span style={{textTransform : 'capitalize'}}>{idKey} : </span>{props.ingredients[idKey]}</li>)}\r\n    );\r\n    return <Auxillary>\r\n        <h3>Your Order</h3>\r\n        <p>A Delicious Burger with following Ingredients</p>\r\n        <ul>\r\n            {ingredientsSummary}\r\n        </ul>\r\n        <p><strong>Total Price : {props.price.toFixed(2)}</strong></p>\r\n        <Button btnType='Success' clicked={props.confirmClicked}>CONFIRM</Button>\r\n        <Button btnType='Danger' clicked={props.cancelClicked}>CANCEL</Button>\r\n    </Auxillary>\r\n}\r\n\r\nexport default OrderSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Auxillary from '../../HOC/Auxillary/Auxillary';\r\nimport WithErrorHandler from '../../HOC/WithErrorHandler/WithErrorHandler';\r\nimport Burger from '../../Component/Burger/Burger';\r\nimport BuildControls from '../../Component/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../Component/UI/Modal/Modal';\r\nimport OrderSummary from '../../Component/Burger/OrderSummary/OrderSummary';\r\nimport AxiosInstance from '../../AxiosInstance';\r\nimport Spinner from '../../Component/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nexport class BurgerBuilder extends Component{\r\n\r\n    state = {\r\n        purchasable : false,\r\n        purchasing : false,\r\n        loading: false\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients).map(\r\n            iKey => ingredients[iKey]\r\n        ).reduce(\r\n        (sum,currValue) => sum+currValue, 0);\r\n        return sum>0;\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const myState = {...this.state};\r\n        myState.ingredients[type] = this.props.ings[type]+1;\r\n        this.setState(myState);\r\n        this.updatePurchaseState(myState);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const myState = {...this.state};\r\n        if(myState.ingredients[type]<=0){\r\n            return;\r\n        }\r\n        myState.ingredients[type] = this.props.ings[type]-1;\r\n        this.setState(myState);\r\n        this.updatePurchaseState(myState);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing:true});\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing:false});\r\n    }\r\n    \r\n    purchaseConfirmHandler = () => {\r\n        /*const myOrder = {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice\r\n        }\r\n        this.setState({loading: true});\r\n        AxiosInstance.post('/Orders.json',myOrder)\r\n            .then(Response => {\r\n                this.setState({loading: false,\r\n                            purchasing: false});\r\n            }).catch(Error => {\r\n                this.setState({loading:false,\r\n                    purchasing: false});\r\n            });\r\n            const queryParams = [];\r\n            for (let i in this.props.ings){\r\n                queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.props.ings[i]));\r\n            }\r\n            const queryString = queryParams.join('&');*/\r\n            this.props.onInitPurchase();\r\n            this.props.history.push('/checkout');\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n       /* AxiosInstance.get('/ingredients.json')\r\n            .then(response => {\r\n                this.setState({ingredients: response.data});\r\n            }).catch(error => {\r\n                this.setState({error: true});\r\n            }); */\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {...this.props.ings};\r\n        let burger = (<Auxillary><Burger ingredients={this.props.ings} />\r\n            <BuildControls \r\n                isAuthenticated={this.props.isAuthenticated}\r\n                addIngredient={this.props.onIngredientAdded}\r\n                removeIngredient={this.props.onIngredientRemoved}\r\n                disabledInfo={disabledInfo}\r\n                price={this.props.price}\r\n                orderEnabled={this.updatePurchaseState(this.props.ings)}\r\n                ordered={this.purchaseHandler}/>\r\n                </Auxillary>);\r\n        if(this.state.ingredients===null){\r\n            burger=this.props.error?<p>Error Fetching Ingredient Details</p>:<Spinner />;\r\n        }\r\n        let orderSummary = <OrderSummary ingredients={this.props.ings}\r\n                            price={this.props.price}\r\n                            confirmClicked={this.purchaseConfirmHandler}\r\n                            cancelClicked={this.purchaseCancelHandler}/>;\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner/>;\r\n        }\r\n        if(this.props.ings===null){\r\n            orderSummary = null;\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        return (\r\n            <Auxillary>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxillary>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        error : state.burgerBuilder.error,\r\n        isAuthenticated : state.auth.idToken!==null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded : (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved : (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients : () => dispatch(actions.initIngredients()),\r\n        onInitPurchase : () => dispatch(actions.purchaseBurgerInit),\r\n        onSetAuthRedirectPath : (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WithErrorHandler(BurgerBuilder,AxiosInstance));","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nclass LogOut extends Component {\r\n    \r\n    componentWillMount(){\r\n        this.props.doLogOut();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to='/'/>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        doLogOut: () => dispatch(actions.authLogOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(LogOut);","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component : null\r\n        }\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({component: cmp.default});\r\n                });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default asyncComponent;","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './Component/Layout/Layout';\nimport BurgerBuilder from './Container/BurgerBuilder/BurgerBuilder';\nimport { Route , Switch, withRouter, Redirect } from 'react-router-dom';\nimport LogOut from './Container/Auth/LogOut/LogOut';\nimport * as actions from './store/actions/index';\nimport { connect } from 'react-redux';\nimport asyncComponent from './HOC/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./Container/CheckOut/CheckOut');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./Container/Auth/Auth');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./Container/Orders/Orders');\n});\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.onTryAutoSignUp();\n  }\n\n  render(){\n\n    let routes = (\n    <Switch>\n      <Route path='/auth' component={asyncAuth} />\n      <Route path='/' exact component={BurgerBuilder} />\n      <Redirect to='/'/>\n    </Switch>);\n\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n          <Route path='/logout' component={LogOut}/>\n          <Route path='/auth' component={asyncAuth} />\n          <Route path='/checkout' component={asyncCheckout} />\n          <Route path='/orders' component={asyncOrders} />\n          <Route path='/' exact component={BurgerBuilder} />\n          <Redirect to='/'/>\n        </Switch>\n      );\n    }\n\n    return (\n    <div className=\"App\">\n      <Layout>\n        {routes}\n      </Layout>\n    </div>\n  );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token != null\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport updateObject from '../utility';\r\nconst INGREDIENT_PRICE = {\r\n    cheese : 1.1,\r\n    salad : 2.1,\r\n    bacon : 3.3,\r\n    meat : 0.7\r\n}\r\n\r\nconst initialState = {\r\n    ingredients : {},\r\n    totalPrice : 4.0,\r\n    error : false,\r\n    building : false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){ \r\n        case actionTypes.ADD_INGREDIENT:\r\n            const updatedIngredients = updateObject(state.ingredients,{[action.ingredientName] : state.ingredients[action.ingredientName]+1});\r\n            const updatedState = updateObject(state,{ingredients : updatedIngredients, building: true, totalPrice : state.totalPrice + INGREDIENT_PRICE[action.ingredientName]})\r\n            return updatedState;\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            const updIngredients = updateObject(state.ingredients,{[action.ingredientName] : state.ingredients[action.ingredientName]-1});\r\n            const updState = updateObject(state,{ingredients : updIngredients, building: true, totalPrice : state.totalPrice - INGREDIENT_PRICE[action.ingredientName]})\r\n            return updState;\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                building : false,\r\n                ingredients : action.ingredients,\r\n                totalPrice : 4,\r\n                error : false\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error : true\r\n            }\r\n        default: \r\n            return state;\r\n }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders : [],\r\n    loading : false,\r\n    purchased : false\r\n}\r\n\r\nconst reducer = (state=initialState, action ) => {\r\n    switch (action.type) {\r\n        case actions.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            }\r\n        case actions.PURCHASE_BURGER_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case actions.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actions.PURCHASE_BURGER_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case actions.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actions.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                orders: action.orders\r\n            }\r\n        case actions.FETCH_ORDERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    idToken : null,\r\n    userId : null,\r\n    error : null,\r\n    loading : false,\r\n    authRedirectPath : '/'\r\n}\r\n\r\nconst authReducer = (state=initialState,action) => {\r\n    switch(action.type){\r\n        case actions.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                idToken : action.idToken,\r\n                userId : action.userId,\r\n                loading: false\r\n            }\r\n        case actions.AUTH_FAILURE:\r\n            return {\r\n                ...state,\r\n                error : action.error,\r\n                loading: false\r\n            }\r\n        case actions.AUTH_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actions.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                idToken: null,\r\n                userId: null\r\n            }\r\n        case actions.SET_AUTH_REDIRECT_PATH:\r\n            return {\r\n                ...state,\r\n                authRedirectPath: action.path\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport BurgerBuilderReducer from './store/reducers/burgerBuilder';\nimport OrderReducer from './store/reducers/order';\nimport AuthReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state',store.getState());\n            return result;\n        }\n    }\n}\n\nconst rootReducer = combineReducers({\n    burgerBuilder : BurgerBuilderReducer,\n    order : OrderReducer,\n    auth : AuthReducer\n});\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose ;\n\nconst store = createStore(rootReducer , composeEnhancers(applyMiddleware( thunk )));\n\nconst app = <Provider store={store}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </Provider>;\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}